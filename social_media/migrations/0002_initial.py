# Generated by Django 4.2.7 on 2023-11-07 15:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("social_media", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
    ]

    operations = [
        migrations.AddField(
            model_name="profile",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="postrate",
            name="post",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="social_media.post"
            ),
        ),
        migrations.AddField(
            model_name="postrate",
            name="profile",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="social_media.profile"
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="posts",
                to="social_media.profile",
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="comments",
            field=models.ManyToManyField(
                blank=True,
                related_name="comments",
                through="social_media.Comment",
                to="social_media.profile",
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="likes",
            field=models.ManyToManyField(
                blank=True,
                related_name="liked_posts",
                through="social_media.PostRate",
                to="social_media.profile",
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="commentrate",
            name="comment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="social_media.comment"
            ),
        ),
        migrations.AddField(
            model_name="commentrate",
            name="profile",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="social_media.profile"
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="social_media.profile"
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="likes",
            field=models.ManyToManyField(
                related_name="liked_comments",
                through="social_media.CommentRate",
                to="social_media.profile",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="post",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="social_media.post"
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="reply_to_comment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="replies",
                to="social_media.comment",
            ),
        ),
        migrations.AddIndex(
            model_name="post",
            index=models.Index(
                fields=["created_at"], name="social_medi_created_8807c8_idx"
            ),
        ),
    ]
